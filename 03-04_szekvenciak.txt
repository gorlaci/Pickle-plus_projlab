Kontroller entry point:
	Personra hívja kontroller:
	- addItem
	- enterRoom
	- dropItem

	Studentre hívja kontroller:
	- activateItem

	Roomra hívja kontroller:
	- split
	- requestMerge
	- timeElapsed



Öröklés entry point:
	Person leszármazottai:
	- meet ???
	- kill
	- slip
	
	Item leszármazottai:
	- activate
	- saveFromDeath
	- saveFromGas
	- meet
	

Szekvenciák:
- Person.addItem( i ) 12.
- Person.enterRoom( r ) 1.
- Person.dropItem( i ) 13.
- Student.activateItem( i ) 17.
- Room.split() 9.			(8-9. menjen első kettőnek)
- Room.requestMerge( r2 ) 8.
- Room.timeElapsed( n ) 10.
- Student.meet( p ) 2.
- Teacher.meet( p ) 3.
- Student.greet( p ) 4.
- Teacher.greet( p ) 5.
- Student.kill( p ) 6.
- Teacher.kill( p ) 7.
- Student.slip() x
- Teacher.slip() x
- Student.pickedUpSlideRule( sr ) 16.
- Teacher.pickedUpSlideRule( sr ) 15.
- SlideRule.setLocation( r, p ) 14.
- Camambert.activate() 17.
- Person.stun() 18.
- Transistor.activate() 19.	//A tranzisztor hogy kérdezi le azt, hogy van-e másik? transistor pair-hez
- Rag.activate() x
- BeerGlass.activate() x
- Mask.activate() x
- SlideRule.saveFromDeath( p ) 31 (31-37ig együtt) a 7. után)
- TVSZ.saveFromDeath( p ) 32
- Camambert.saveFromDeath( p ) 33
- Transistor.saveFromDeath( p ) 34
- Rag.saveFromDeath( p ) 35
- BeerGlass.saveFromDeath( p ) 36
- Mask.saveFromDeath( p ) 37
- SlideRule.saveFromGas() 24 (24-30ig együtt mehetnek a 18 után)
- TVSZ.saveFromGas()	25
- Camambert.saveFromGas()  26
- Transistor.saveFromGas() 27
- Rag.saveFromGas()  28
- BeerGlass.saveFromGas() 29
- Mask.saveFromGas() 30
- SlideRule.meet( p ) x
- TVSZ.meet( p ) x
- Camambert.meet( p ) x
- Transistor.meet( p ) x
- Rag.meet( p ) 11.
- BeerGlass.meet( p ) x
- Mask.meet( p ) x
- Mask.timeElapsed(1) 23.	(11. után is mehet)
- Rag.timeElapsed(1) 21.	(11. után is mehet)
- BeerGlass.timeElapsed(1) 22. (11. után is mehet)

